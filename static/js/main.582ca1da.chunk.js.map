{"version":3,"sources":["Redux/Context.js","Quiz/Quiz.js","Mani/Mani.js","Result/Result.js","Main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["MyContext","React","createContext","Quiz","props","context","useContext","useState","answer","setAnswer","useEffect","url","map","car","cake","toLowerCase","axios","get","then","response","console","log","data","results","setQuestions","value","correct_answer","incorrect_answers","shuffledArray","array","i","length","j","Math","floor","random","temp","shuffleArray","className","index","question","element","onClick","increment","decrement","setIndex","clickHandler","Mani","score","Result","setVisible","reset","Main","for","style","color","fontSize","padding","width","margin","display","border","borderRadius","boxSizing","type","min","max","id","name","onChange","event","target","setCar","htmlFor","setMap","setCake","backgroundColor","cursor","App","questions","setScore","visible","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.582ca1da.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// this is the equivalent to the createStore method of Redux\r\n// https://redux.js.org/api/createstore\r\n\r\nconst MyContext = React.createContext();\r\n\r\nexport default MyContext;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport MyContext from \"../Redux/Context\";\r\nimport axios from 'axios'\r\nimport './Quiz.css';\r\nconst Quiz = (props) => {\r\n    const context = useContext(MyContext)\r\n    const [answer, setAnswer] = useState([])\r\n\r\n    useEffect(() => {\r\n        const url = context.map === 'any' ? `https://opentdb.com/api.php?amount=${context.car}&difficulty=${context.cake.toLowerCase()}` : `https://opentdb.com/api.php?amount=${context.car}&difficulty=${context.cake.toLowerCase()}&category=${context.map}`;\r\n        axios.get(url)\r\n            .then(response => {\r\n                console.log(response.data.results)\r\n                props.setQuestions(response.data.results)\r\n            })\r\n\r\n\r\n    }, [])\r\n\r\n    function shuffleArray(array) {\r\n        for (var i = array.length - 1; i > 0; i--) {\r\n\r\n            // Generate random number  \r\n            var j = Math.floor(Math.random() * (i + 1));\r\n\r\n            var temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(props?.value?.correct_answer)\r\n        console.log(answer)\r\n        if (props?.value?.incorrect_answers) {\r\n            const allAnswers = [props?.value?.correct_answer, ...props?.value?.incorrect_answers]\r\n            const shuffledArray = shuffleArray(allAnswers)\r\n            setAnswer(shuffledArray)\r\n        }\r\n\r\n    }, [props.value])\r\n\r\n\r\n    const clickHandler = (element) => {\r\n        if (props?.value?.correct_answer === element) {\r\n            context.increment()\r\n        }\r\n        else {\r\n            context.decrement()\r\n        }\r\n        // alert(element)\r\n        // props?.setIndex((prev) => {\r\n        //     return prev + 1\r\n        // })\r\n        props.setIndex(props.index + 1)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"a1\">\r\n                <h3 className=\"a2\">\r\n                    QUESTION {props.index + 1}\r\n                </h3>\r\n                <h2 className=\"a3\" > {props?.value?.question}\r\n                </h2>\r\n                {/* <button className=\"but\">{   }</button>\r\n                <button className=\"but\">6</button><br></br>\r\n                <button className=\"but\">10</button>\r\n                <button className=\"but\">8</button><br></br> */}\r\n                {answer.map((element) => (\r\n                    <button className=\"but\" onClick={() => clickHandler(element)}>{element}</button>\r\n                ))}\r\n                <br></br>\r\n                {/* <button className=\"but\">Skip</button> */}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Quiz;","import React, { useContext } from \"react\";\r\nimport MyContext from \"../Redux/Context\";\r\n\r\nconst Mani = () => {\r\n    const context = useContext(MyContext)\r\n    console.log(context)\r\n    return (\r\n        <div>\r\n            <section className=\"fle\">\r\n                <p className=\"fle2\">THE AVERAGE GAME <span className=\"fle1\">current score:{context.score}</span></p>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\nexport default Mani;","import React, { useContext } from \"react\";\r\nimport MyContext from \"../Redux/Context\";\r\nimport \"./Result.css\"\r\n\r\nconst Result = (props) => {\r\n    const context = useContext(MyContext)\r\n    return (\r\n        < div>\r\n            <div className=\"res\">\r\n                <span className=\"res1\"><span className=\"re2\">Your Score :</span>  {context.score}</span>\r\n\r\n            </div>\r\n            <button onClick={() => {\r\n                props.setVisible(true)\r\n                props.setIndex(0)\r\n                context.reset()\r\n            }} > Play Again </button>\r\n        </div>\r\n    )\r\n}\r\nexport default Result","import React, { useState, useContext } from \"react\";\r\nimport MyContext from \"../Redux/Context\";\r\nimport \"./Main.css\"\r\n\r\n\r\nconst Main = (props) => {\r\n    const context = useContext(MyContext)\r\n    const categories = [\r\n        \"Any Category\",\r\n        \"General Knowledge\",\r\n        \"Entertainment: Books\",\r\n        \"Entertainment: Film\",\r\n        \"Entertainment: Music\",\r\n        \"Entertainment: Musicals & Theatres\",\r\n        \"Entertainment: Television\",\r\n        \"Entertainment: Video Games\",\r\n        \"Entertainment: Board Games\",\r\n        \"Science & Nature\",\r\n        \"Science: Computers\",\r\n        \"Science: Mathematics\",\r\n        \"Mythology\",\r\n        \"Sports\",\r\n        \"Geography\",\r\n        \"History\",\r\n        \"Politics\",\r\n        \"Art\"];\r\n\r\n\r\n    const handleChange = (event) => {\r\n        let { value, min, max } = event.target;\r\n        console.log(value, min, max)\r\n        if (!value) props.setCar(\"\")\r\n        if (value <= max && value >= min) props.setCar(value)\r\n\r\n    }\r\n    const ferrariChange = (event, value) => {\r\n        props.setMap(event.target.value)\r\n    }\r\n    const cakeChange = (event, value) => {\r\n        props.setCake(event.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"b\">\r\n            \r\n                {/* <label htmlFor=\" Questions\">Number Of Questions</label>\r\n            <select  name=\"Questions\" id=\"Questions\" onChange={handleChange}>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value=\"30\">30</option>  </select>*/}\r\n                <label for=\"fname\" style={\r\n                    {color:\"white\", fontSize:\"20px\",padding:\"10px 20px\"}\r\n                }>Number Of Questions:</label><br></br>\r\n                <input style={\r\n                    { width: \"70%\",\r\n                        padding: \"12px 20px\",\r\n                        margin: \"8px 0\",\r\n                        display: \"inline-block\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius:\" 4px\",\r\n                        boxSizing:\"border-box\"}\r\n                }type=\"number\" value={context.car} min=\"1\" max=\"30\" id=\"fname\" name=\"fname\" onChange={handleChange}></input>\r\n<br></br>\r\n\r\n                <label htmlFor=\" category\"style={\r\n                    {color:\"white\", fontSize:\"20px\"}\r\n                }>Select Category</label><br></br>\r\n                <select style={\r\n                    { width: \"70%\",\r\n                        padding: \"12px 20px\",\r\n                        margin: \"8px 0\",\r\n                        display: \"inline-block\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius:\" 4px\",\r\n                        boxSizing:\"border-box\"}\r\n                }name=\"category\" id=\"category\" onChange={ferrariChange}>\r\n                    {/* <option value=\"General\">General Knowledge</option>\r\n                    <option value=\"Sports\">Sports</option>\r\n                    <option value=\"Animals\">Animals</option> */}\r\n                    {categories.map((element, index) => {\r\n                        return <option value={index + 8}>{element}</option>\r\n\r\n                    })}\r\n                </select>\r\n                <br></br>\r\n                <label htmlFor=\" meth\" style={\r\n                    {color:\"white\", fontSize:\"20px\"}\r\n                }>Select Difficulty : </label><br></br>\r\n                <select style={\r\n                    { width: \"70%\",\r\n                        padding: \"12px 20px\",\r\n                        margin: \"8px 0\",\r\n                        display: \"inline-block\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius:\" 4px\",\r\n                        boxSizing:\"border-box\"}\r\n                }name=\"meth\" id=\"meth\" onChange={cakeChange}>\r\n                    <option value=\"Easy\">Easy</option>\r\n                    <option value=\"Medium\">Medium</option>\r\n                    <option value=\"Hard\">Hard</option>\r\n\r\n                </select>\r\n                <br></br>\r\n                <button style={\r\n                     {\r\n                        width: \"20%\",\r\n                        backgroundColor: \"pink\",\r\n                        color:\"black\",\r\n                        padding: \"14px 20px\",\r\n                        margin: \"8px 0\",\r\n                        border: \"none\",\r\n                        borderRadius: \"4px\",\r\n                        cursor: \"pointer\",\r\n                        fontSize:\"30px\"\r\n                      }\r\n                } onClick={() => {\r\n                props.setVisible(false)\r\n            }}>Play</button>\r\n                {/* <h>{context.car}</h>\r\n                <h>{context.map}</h>\r\n                <h>{context.cake}</h> */}\r\n            </div>\r\n          \r\n        </div >\r\n    )\r\n\r\n\r\n}\r\nexport default Main","import React, { useState, useEffect } from \"react\";\nimport Quiz from \"./Quiz/Quiz\";\nimport './App.css';\nimport Mani from \"./Mani/Mani\";\nimport axios from \"axios\";\nimport { Provider } from \"react-redux\";\nimport MyContext from \"./Redux/Context\";\nimport Result from \"./Result/Result\";\nimport Main from \"./Main/Main\"\n\n\nfunction App() {\n  const [questions, setQuestions] = useState([])\n  const [index, setIndex] = useState(0)\n  const [score, setScore] = useState(0)\n  const [visible, setVisible] = useState(true)\n  const [car, setCar] = useState(10)\n  const [map, setMap] = useState(\"any\")\n  const [cake, setCake] = useState(\"Easy\")\n\n  return (\n    <MyContext.Provider value={{\n      score: score,\n      increment: () => {\n        setScore(score + 1)\n      },\n      decrement: () => {\n        setScore(score - 1)\n      },\n      reset:()=>{\n        setScore(0)\n      },\n      car: car,\n      map: map,\n      cake: cake\n\n\n\n    }}>\n      {visible ? <Main setCar={setCar} setMap={setMap} setCake={setCake} setVisible={setVisible} /> :\n        index >= 10 ? <Result setVisible={setVisible} setIndex={setIndex}\n        /> : <div>\n            <Quiz value={questions[index]}\n              setQuestions={setQuestions}\n              setIndex={setIndex} index={index} />\n            <Mani />\n          </div>}\n\n\n    </MyContext.Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}